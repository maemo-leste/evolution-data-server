Index: evolution-data-server/src/addressbook/libebook-contacts/e-vcard.h
===================================================================
--- evolution-data-server.orig/src/addressbook/libebook-contacts/e-vcard.h
+++ evolution-data-server/src/addressbook/libebook-contacts/e-vcard.h
@@ -228,8 +228,8 @@ struct _EVCardClass {
 	GObjectClass parent_class;
 
 	/* Padding for future expansion */
-	void (*_ebook_reserved0) (void);
-	void (*_ebook_reserved1) (void);
+	void (*add_attribute)    (EVCard *evc, EVCardAttribute *attr);
+	void (*remove_attribute) (EVCard *evc, EVCardAttribute *attr);
 	void (*_ebook_reserved2) (void);
 	void (*_ebook_reserved3) (void);
 	void (*_ebook_reserved4) (void);
Index: evolution-data-server/src/addressbook/libebook-contacts/e-vcard.c
===================================================================
--- evolution-data-server.orig/src/addressbook/libebook-contacts/e-vcard.c
+++ evolution-data-server/src/addressbook/libebook-contacts/e-vcard.c
@@ -179,6 +179,16 @@ vcard_finalize (GObject *object)
 }
 
 static void
+e_vcard_add_attribute_cb (EVCard *evc, EVCardAttribute *attr)
+{
+}
+
+static void
+e_vcard_remove_attribute_cb (EVCard *evc, EVCardAttribute *attr)
+{
+}
+
+static void
 e_vcard_class_init (EVCardClass *class)
 {
 	GObjectClass *object_class;
@@ -187,6 +197,9 @@ e_vcard_class_init (EVCardClass *class)
 
 	object_class = G_OBJECT_CLASS (class);
 	object_class->finalize = vcard_finalize;
+
+	class->add_attribute = e_vcard_add_attribute_cb;
+	class->remove_attribute = e_vcard_remove_attribute_cb;
 }
 
 static void
@@ -1657,10 +1670,12 @@ e_vcard_remove_attributes (EVCard *evc,
                            const gchar *attr_name)
 {
 	GList *attr;
+	EVCardClass *klass;
 
 	g_return_if_fail (E_IS_VCARD (evc));
 	g_return_if_fail (attr_name != NULL);
 
+	klass = E_VCARD_GET_CLASS (evc);
 	attr = e_vcard_ensure_attributes (evc);
 	while (attr) {
 		GList *next_attr;
@@ -1674,7 +1689,7 @@ e_vcard_remove_attributes (EVCard *evc,
 
 			/* matches, remove/delete the attribute */
 			evc->priv->attributes = g_list_delete_link (evc->priv->attributes, attr);
-
+			klass->remove_attribute (evc, a);
 			e_vcard_attribute_free (a);
 		}
 
@@ -1700,6 +1715,7 @@ e_vcard_remove_attribute (EVCard *evc,
 	 * already been called if this is a valid call and attr is among
 	 * our attributes. */
 	evc->priv->attributes = g_list_remove (evc->priv->attributes, attr);
+	E_VCARD_GET_CLASS (evc)->remove_attribute (evc, attr);
 	e_vcard_attribute_free (attr);
 }
 
@@ -1728,6 +1744,8 @@ e_vcard_append_attribute (EVCard *evc,
 	} else {
 		evc->priv->attributes = g_list_append (e_vcard_ensure_attributes (evc), attr);
 	}
+
+	E_VCARD_GET_CLASS (evc)->add_attribute (evc, attr);
 }
 
 /**
@@ -1815,6 +1833,8 @@ e_vcard_add_attribute (EVCard *evc,
 	} else {
 		evc->priv->attributes = g_list_prepend (e_vcard_ensure_attributes (evc), attr);
 	}
+
+	E_VCARD_GET_CLASS (evc)->add_attribute (evc, attr);
 }
 
 /**
Index: evolution-data-server/src/addressbook/libebook-contacts/e-contact.c
===================================================================
--- evolution-data-server.orig/src/addressbook/libebook-contacts/e-contact.c
+++ evolution-data-server/src/addressbook/libebook-contacts/e-contact.c
@@ -353,18 +353,59 @@ e_contact_finalize (GObject *object)
 }
 
 static void
+reset_chached_attribute (EContact *contact, EVCardAttribute *attr)
+{
+	const char *vcard_field;
+	int i;
+
+	vcard_field = e_vcard_attribute_get_name (attr);
+
+	for (i = E_CONTACT_FIELD_FIRST; i < E_CONTACT_FIELD_LAST; i ++) {
+		if (field_info[i].vcard_field_name == NULL)
+			continue;
+		if (field_info[i].t & E_CONTACT_FIELD_TYPE_SYNTHETIC)
+			continue;
+		if (strcmp (field_info[i].vcard_field_name, vcard_field))
+			continue;
+
+		g_free (contact->priv->cached_strings[i]);
+		contact->priv->cached_strings[i] = NULL;
+	}
+}
+
+static void
+e_contact_add_attribute (EVCard *evc, EVCardAttribute *attr)
+{
+	reset_chached_attribute (E_CONTACT (evc), attr);
+	E_VCARD_CLASS (e_contact_parent_class)->add_attribute (evc, attr);
+}
+
+static void
+e_contact_remove_attribute (EVCard *evc, EVCardAttribute *attr)
+{
+	reset_chached_attribute (E_CONTACT (evc), attr);
+	E_VCARD_CLASS (e_contact_parent_class)->remove_attribute (evc, attr);
+}
+
+static void
 e_contact_class_init (EContactClass *class)
 {
 	GObjectClass *object_class;
+	EVCardClass *vcard_class;
 	gint ii;
 
 	g_type_class_add_private (class, sizeof (EContactPrivate));
 
 	object_class = G_OBJECT_CLASS (class);
+	vcard_class = E_VCARD_CLASS (class);
+
 	object_class->set_property = e_contact_set_property;
 	object_class->get_property = e_contact_get_property;
 	object_class->finalize = e_contact_finalize;
 
+	vcard_class->add_attribute = e_contact_add_attribute;
+	vcard_class->remove_attribute = e_contact_remove_attribute;
+
 	for (ii = E_CONTACT_FIELD_FIRST; ii < E_CONTACT_FIELD_LAST; ii++) {
 		GParamSpec *pspec = NULL;
 		GParamFlags flags;
