From d0de670fa60142ea756675520f547740aeec7602 Mon Sep 17 00:00:00 2001
From: Emilio Pozuelo Monfort <pochu27@gmail.com>
Date: Mon, 28 Feb 2011 18:59:18 +0000
Subject: [PATCH] Fix build when PATH_MAX is undefined

https://bugzilla.gnome.org/show_bug.cgi?id=642783
---
 camel/providers/local/camel-local-folder.c |   11 +++++++++++
 libedataserverui/e-passwords.c             |   15 ++++++++++++---
 2 files changed, 23 insertions(+), 3 deletions(-)

diff --git a/camel/providers/local/camel-local-folder.c b/camel/providers/local/camel-local-folder.c
index 3b7443c..59990a5 100644
--- a/camel/providers/local/camel-local-folder.c
+++ b/camel/providers/local/camel-local-folder.c
@@ -302,7 +302,11 @@ camel_local_folder_construct(CamelLocalFolder *lf, guint32 flags, GError **error
 	const gchar *root_dir_path;
 	gchar *tmp, *statepath;
 #ifndef G_OS_WIN32
+#ifdef __GLIBC__
+	gchar *folder_path;
+#else
 	gchar folder_path[PATH_MAX];
+#endif
 	struct stat st;
 #endif
 	gint forceindex, len;
@@ -346,9 +350,16 @@ camel_local_folder_construct(CamelLocalFolder *lf, guint32 flags, GError **error
 #ifndef G_OS_WIN32
 	/* follow any symlinks to the mailbox */
 	if (g_lstat (lf->folder_path, &st) != -1 && S_ISLNK (st.st_mode) &&
+#ifdef __GLIBC__
+	    (folder_path = realpath (lf->folder_path, NULL)) != NULL) {
+#else
 	    realpath (lf->folder_path, folder_path) != NULL) {
+#endif
 		g_free (lf->folder_path);
 		lf->folder_path = g_strdup (folder_path);
+#ifdef __GLIBC__
+		free (folder_path);
+#endif
 	}
 #endif
 	lf->changes = camel_folder_change_info_new();
diff --git a/libedataserverui/e-passwords.c b/libedataserverui/e-passwords.c
index bd2ea7e..1e71ec0 100644
--- a/libedataserverui/e-passwords.c
+++ b/libedataserverui/e-passwords.c
@@ -122,14 +122,23 @@ ep_key_file_get_filename (void)
 
 	override = g_getenv ("GNOME22_USER_DIR");
 	if (override != NULL) {
+#ifdef __GLIBC__
+		gchar *resolved_path = realpath (override, NULL);
+#else
 		gchar resolved_path[PATH_MAX];
-
+		realpath (override, resolved_path);
+#endif
+		gchar *ret;
 		/* Use realpath() to canonicalize the path, which
 		 * strips off any trailing directory separators so
 		 * we can safely tack on "_private". */
-		return g_strdup_printf (
+		ret = g_strdup_printf (
 			"%s_private" G_DIR_SEPARATOR_S "Evolution",
-			realpath (override, resolved_path));
+			resolved_path);
+#if __GLIBC__
+		free (resolved_path);
+#endif
+		return ret;
 	}
 #endif
 	return g_build_filename (
-- 
1.7.4.1

